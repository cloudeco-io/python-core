name: "[Dispatch] Release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'enter version(x.y.z)'
        required: true
        default: '1.0.0'
      container_arch:
        type: choice
        description: 'choose container architecture'
        default: linux/arm64
        options:
        - "linux/amd64"
        - "linux/amd64,linux/arm64"

      no-cache:
        description: 'Uncheck to use the cache when building images.'
        type: boolean
        required: false
        default: true

env:
  VERSION: ${{ github.event.inputs.version }}
  PACKAGE_VERSION: ${{ github.event.inputs.version }}

jobs:
  docker:
    needs: pypi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CLOUDFORET_DOCKER_USERNAME }}
          password: ${{ secrets.CLOUDFORET_DOCKER_PASSWORD }}

      - name: Set version only major and minor
        run: |
          echo "X_VERSION=$(echo ${{ env.VERSION }} | cut -d'.' -f1)" >> $GITHUB_ENV
          echo "XY_VERSION=$(echo ${{ env.VERSION }} | cut -d'.' -f1-2)" >> $GITHUB_ENV

      - name: Build and push to dockerhub
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ env.ARCH }}
          push: true
          no-cache: ${{ github.event.inputs.no-cache }}
          tags: |
            cloudeco/${{ github.event.repository.name }}:${{ env.VERSION }}
            cloudeco/${{ github.event.repository.name }}:${{ env.X_VERSION }}
            cloudeco/${{ github.event.repository.name }}:${{ env.XY_VERSION }}

